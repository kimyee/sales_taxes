This application is written in Ruby. 
The application prints out the receipt details of 3 shopping baskets, just like a cashier would print out a receipt for each customer when they checkout with their items. Thus, I assumed the inputs were user inputs; like online shopping, the user is the customer as well as the cashier. 
Since I was given a set list of inputs, I looked for patterns between items when applying different tax rates. For instance, it was easier figuring out which items needed to be taxed first and figuring out how to apply the specific tax rate to each item than to think which items did not need to be taxed. The easiest tax rate to apply was the imported items. Seeing that a 5% tax rate was to be applied to all imported items, I used the #include? method to detect whether the user input contained the string "imported"; if so, then a 5% tax rate would be applied to the price of the associated item. There were only 2 items on the list that needed the basic sales tax to be applied, thus I just used the actual item name as the filter. For example, I used #include? to detect if the input contained the string "music" or "perfume" because those were the only 2 items that would get the basic salse tax. If list of items that needed the basic sales tax to be applied was larger then I would probably need to find a different solution to apply the basic sales tax. Certain items would get the import tax on top of the basic sales tax. In such a case, I combined the method of detecting the input that contains the string "imported" with the method of decting the input that contains the string "music" to apply the appropriate tax rate. 
Although this application was not created using TDD or BDD due to my lack of testing skills. This is an area I would like to work on and greatly improve in. The only kind of testing I have done for this application is usability testing, which involved giving someone instructions on how to run the application and watching the person run the program. 
The design of this application is greatly influenced by the set input list and the specific items on the list. The way the various taxes are applied to the item prices in this application would no doubt change greatly if the items were different or if there are more or less items for a specific tax rate. 
